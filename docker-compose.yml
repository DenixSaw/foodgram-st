services:
  db:
    image: postgres:13-alpine
    container_name: foodgram-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h db -U ${POSTGRES_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: foodgram-backend:latest
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: foodgram-backend
    env_file: .env
    volumes:
      - static:/app/static/
      - media:/app/media/
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    image: foodgram_build
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: foodgram-frontend
    volumes:
      - static:/static_build

  nginx:
    image: nginx:1.25.4-alpine
    container_name: foodgram-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static:/usr/share/nginx/html/static/
      - media:/usr/share/nginx/html/media/
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  static:
  media:
